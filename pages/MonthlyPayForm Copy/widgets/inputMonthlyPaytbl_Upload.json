{
  "accentColor": "{{appsmith.theme.colors.primaryColor}}",
  "allowAddNewRow": false,
  "animateLoading": true,
  "borderColor": "#E0DEDE",
  "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
  "borderWidth": "1",
  "bottomRow": 78,
  "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
  "cachedTableData": {},
  "canFreezeColumn": true,
  "childStylesheet": {
    "button": {
      "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
      "boxShadow": "none",
      "buttonColor": "{{appsmith.theme.colors.primaryColor}}"
    },
    "editActions": {
      "discardBorderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
      "discardButtonColor": "{{appsmith.theme.colors.primaryColor}}",
      "saveBorderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
      "saveButtonColor": "{{appsmith.theme.colors.primaryColor}}"
    },
    "iconButton": {
      "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
      "boxShadow": "none",
      "buttonColor": "{{appsmith.theme.colors.primaryColor}}"
    },
    "menuButton": {
      "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
      "boxShadow": "none",
      "menuColor": "{{appsmith.theme.colors.primaryColor}}"
    }
  },
  "columnOrder": [
    "DateMonth",
    "transid",
    "staffid",
    "staffdName",
    "basicsalary",
    "otherbenefits",
    "salaryadvance",
    "loandeduction",
    "helsb",
    "advancerecovery",
    "socialdeduction",
    "otherdeductions",
    "customColumn2",
    "customColumn3",
    "customColumn1",
    "customColumn4",
    "customColumn5",
    "grosssalary",
    "nssf",
    "paye",
    "totaldeductions",
    "netpay"
  ],
  "columnUpdatedAt": 1756135687796,
  "columnWidthMap": {
    "DateMonth": 110,
    "staffid": 100
  },
  "compactMode": "SHORT",
  "customIsLoading": false,
  "customIsLoadingValue": "",
  "defaultPageSize": 0,
  "defaultSelectedRowIndex": 0,
  "defaultSelectedRowIndices": [
    0
  ],
  "delimiter": ",",
  "dynamicBindingPathList": [
    {
      "key": "accentColor"
    },
    {
      "key": "borderRadius"
    },
    {
      "key": "boxShadow"
    },
    {
      "key": "tableData"
    },
    {
      "key": "totalRecordsCount"
    },
    {
      "key": "primaryColumns.transid.computedValue"
    },
    {
      "key": "primaryColumns.staffid.computedValue"
    },
    {
      "key": "primaryColumns.staffdName.computedValue"
    },
    {
      "key": "primaryColumns.basicsalary.computedValue"
    },
    {
      "key": "primaryColumns.otherbenefits.computedValue"
    },
    {
      "key": "primaryColumns.salaryadvance.computedValue"
    },
    {
      "key": "primaryColumns.loandeduction.computedValue"
    },
    {
      "key": "primaryColumns.socialdeduction.computedValue"
    },
    {
      "key": "primaryColumns.helsb.computedValue"
    },
    {
      "key": "primaryColumns.advancerecovery.computedValue"
    },
    {
      "key": "primaryColumns.otherdeductions.computedValue"
    },
    {
      "key": "primaryColumns.DateMonth.computedValue"
    },
    {
      "key": "primaryColumns.customColumn1.computedValue"
    },
    {
      "key": "primaryColumns.customColumn2.computedValue"
    },
    {
      "key": "primaryColumns.customColumn3.computedValue"
    },
    {
      "key": "primaryColumns.customColumn4.computedValue"
    },
    {
      "key": "primaryColumns.customColumn5.computedValue"
    },
    {
      "key": "primaryColumns.staffid.selectOptions"
    },
    {
      "key": "primaryColumns.grosssalary.computedValue"
    },
    {
      "key": "primaryColumns.nssf.computedValue"
    },
    {
      "key": "primaryColumns.paye.computedValue"
    },
    {
      "key": "primaryColumns.totaldeductions.computedValue"
    },
    {
      "key": "primaryColumns.netpay.computedValue"
    }
  ],
  "dynamicPropertyPathList": [
    {
      "key": "tableData"
    },
    {
      "key": "primaryColumns.DateMonth.inputFormat"
    },
    {
      "key": "primaryColumns.DateMonth.validation.isColumnEditableCellRequired"
    },
    {
      "key": "onPageSizeChange"
    },
    {
      "key": "onAddNewRowSave"
    }
  ],
  "dynamicTriggerPathList": [
    {
      "key": "onPageChange"
    },
    {
      "key": "onSort"
    },
    {
      "key": "onAddNewRowSave"
    },
    {
      "key": "onPageSizeChange"
    }
  ],
  "enableClientSideSearch": true,
  "endOfData": false,
  "flexVerticalAlignment": "start",
  "horizontalAlignment": "LEFT",
  "infiniteScrollEnabled": true,
  "inlineEditingSaveOption": "CUSTOM",
  "isLoading": false,
  "isSortable": false,
  "isVisible": true,
  "isVisibleDownload": true,
  "isVisibleFilters": false,
  "isVisiblePagination": false,
  "isVisibleSearch": false,
  "key": "7h70hz9k6j",
  "label": "Data",
  "leftColumn": 0,
  "minWidth": 450,
  "mobileBottomRow": 42,
  "mobileLeftColumn": 0,
  "mobileRightColumn": 16,
  "mobileTopRow": 14,
  "needsErrorInfo": false,
  "onAddNewRowSave": "\n{{ \n  storeValue(\"tempTableData\", inputMonthlyPaytbl_Upload);\n  storeValue(\"inputMonthlyPaytbl\", appsmith.store.tempTableData); // Forces refresh\n  Insert_public_monthlypayraw1.run(() => {\n    showAlert(\"Successfully created!\");\n    Select_public_monthlypayraw1.run();\n  }, () => {\n    showAlert(\"Unable to create!\");\n  });\n}}\n\n\n",
  "onPageChange": "{{\n            Select_public_monthlypayraw1.run();\n            Total_record_public_monthlypayraw1.run()\n          }}",
  "onPageSizeChange": "{{150}}",
  "onSort": "{{\n            Select_public_monthlypayraw1.run();\n            Total_record_public_monthlypayraw1.run()\n          }}",
  "originalBottomRow": 78,
  "originalTopRow": 40,
  "parentColumnSpace": 10.25,
  "parentId": "0",
  "parentRowSpace": 10,
  "primaryColumnId": "transid",
  "primaryColumns": {
    "DateMonth": {
      "alias": "DateMonth",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "columnType": "date",
      "computedValue": "{{(() => { const tableData = inputMonthlyPaytbl_Upload.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"DateMonth\"])) : DateMonth })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "LEFT",
      "id": "DateMonth",
      "index": 11,
      "inputFormat": "YYYY-MM-DD HH:mm",
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "DateMonth",
      "notation": "standard",
      "originalId": "DateMonth",
      "outputFormat": "DD/MM/YYYY",
      "sticky": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {
        "isColumnEditableCellRequired": "true"
      },
      "verticalAlignment": "TOP",
      "width": 150
    },
    "GrossSalary": {
      "isCellEditable": false,
      "isEditable": false
    },
    "NEYPAY": {
      "isCellEditable": false,
      "isEditable": false
    },
    "NSSF": {
      "isCellEditable": false,
      "isEditable": false
    },
    "PAYE": {
      "isCellEditable": false,
      "isEditable": false
    },
    "TotalDeductions": {
      "isCellEditable": false,
      "isEditable": false
    },
    "advancerecovery": {
      "alias": "advancerecovery",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "columnType": "number",
      "computedValue": "{{(() => { const tableData = inputMonthlyPaytbl_Upload.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( \n  (() => {\n    return Number(currentRow.advancerecovery || 0).toLocaleString('en-US');\n  })()\n)) :  \n  (() => {\n    return Number(currentRow.advancerecovery || 0).toLocaleString('en-US');\n  })()\n })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "LEFT",
      "id": "advancerecovery",
      "index": 9,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "advancerecovery",
      "notation": "standard",
      "originalId": "advancerecovery",
      "sticky": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "TOP",
      "width": 150
    },
    "basicsalary": {
      "alias": "basicsalary",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "columnType": "number",
      "computedValue": "{{(() => { const tableData = inputMonthlyPaytbl_Upload.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( Number(currentRow.basicsalary).toLocaleString('en-US') )) :  Number(currentRow.basicsalary).toLocaleString('en-US')  })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "LEFT",
      "id": "basicsalary",
      "index": 3,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "basicsalary",
      "notation": "standard",
      "originalId": "basicsalary",
      "sticky": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "TOP",
      "width": 150
    },
    "customColumn1": {
      "alias": "GrossSalary",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "buttonStyle": "rgb(3, 179, 101)",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = inputMonthlyPaytbl_Upload.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (\n  (() => {\n    const gross = currentRow.basicsalary + (currentRow.otherbenefits || 0);\n    return gross.toLocaleString();\n  })()\n)) : \n  (() => {\n    const gross = currentRow.basicsalary + (currentRow.otherbenefits || 0);\n    return gross.toLocaleString();\n  })()\n })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "LEFT",
      "id": "customColumn1",
      "index": 10,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": true,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "GrossSalary",
      "labelColor": "#FFFFFF",
      "notation": "standard",
      "originalId": "customColumn1",
      "sticky": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "TOP",
      "width": 150
    },
    "customColumn2": {
      "alias": "NSSF",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "buttonStyle": "rgb(3, 179, 101)",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = inputMonthlyPaytbl_Upload.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( \n  (() => {\n    const basic = Number(currentRow.basicsalary) || 0;\n    const benefits = Number(currentRow.otherbenefits) || 0;\n    const gross = basic + benefits;\n    const nssf = gross * 0.10;\n    return nssf.toLocaleString('en-US');\n  })()\n)) :  \n  (() => {\n    const basic = Number(currentRow.basicsalary) || 0;\n    const benefits = Number(currentRow.otherbenefits) || 0;\n    const gross = basic + benefits;\n    const nssf = gross * 0.10;\n    return nssf.toLocaleString('en-US');\n  })()\n })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "LEFT",
      "id": "customColumn2",
      "index": 10,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": true,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "NSSF",
      "labelColor": "#FFFFFF",
      "notation": "standard",
      "originalId": "customColumn2",
      "sticky": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "TOP",
      "width": 150
    },
    "customColumn3": {
      "alias": "PAYE",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "buttonStyle": "rgb(3, 179, 101)",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = inputMonthlyPaytbl_Upload.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (\n  (() => {\n    const gross = currentRow.basicsalary + (currentRow.otherbenefits || 0);\n    const nssf = gross * 0.10;\n    const taxable = gross - nssf;\n    let paye = 0;\n\n    if (taxable <= 270000) {\n      paye = 0;\n    } else if (taxable <= 520000) {\n      paye = (taxable - 270000) * 0.08;\n    } else if (taxable <= 760000) {\n      paye = 20000 + (taxable - 520000) * 0.20;\n    } else if (taxable <= 1000000) {\n      paye = 68000 + (taxable - 760000) * 0.25;\n    } else {\n      paye = 128000 + (taxable - 1000000) * 0.30;\n    }\n\n    return paye.toLocaleString();\n  })()\n)) : \n  (() => {\n    const gross = currentRow.basicsalary + (currentRow.otherbenefits || 0);\n    const nssf = gross * 0.10;\n    const taxable = gross - nssf;\n    let paye = 0;\n\n    if (taxable <= 270000) {\n      paye = 0;\n    } else if (taxable <= 520000) {\n      paye = (taxable - 270000) * 0.08;\n    } else if (taxable <= 760000) {\n      paye = 20000 + (taxable - 520000) * 0.20;\n    } else if (taxable <= 1000000) {\n      paye = 68000 + (taxable - 760000) * 0.25;\n    } else {\n      paye = 128000 + (taxable - 1000000) * 0.30;\n    }\n\n    return paye.toLocaleString();\n  })()\n })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "LEFT",
      "id": "customColumn3",
      "index": 10,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": true,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "PAYE",
      "labelColor": "#FFFFFF",
      "notation": "standard",
      "originalId": "customColumn3",
      "sticky": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "TOP",
      "width": 150
    },
    "customColumn4": {
      "alias": "TotalDeductions",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "buttonStyle": "rgb(3, 179, 101)",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = inputMonthlyPaytbl_Upload.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (\n  (() => {\n    const gross = currentRow.basicsalary + (currentRow.otherbenefits || 0);\n    const nssf = gross * 0.10;\n    const taxable = gross - nssf;\n\n    let paye = 0;\n    if (taxable <= 270000) {\n      paye = 0;\n    } else if (taxable <= 520000) {\n      paye = (taxable - 270000) * 0.08;\n    } else if (taxable <= 760000) {\n      paye = 20000 + (taxable - 520000) * 0.20;\n    } else if (taxable <= 1000000) {\n      paye = 68000 + (taxable - 760000) * 0.25;\n    } else {\n      paye = 128000 + (taxable - 1000000) * 0.30;\n    }\n\n    const totalDeductions =\n      nssf +\n      paye +\n      (currentRow.salaryadvance || 0) +\n      (currentRow.loandeduction || 0) +\n      (currentRow.helsb || 0) +\n      (currentRow.advancerecovery || 0) +\n      (currentRow.otherdeductions || 0) +\n      (currentRow.socialdeduction || 0);\n\n    return totalDeductions.toLocaleString();\n  })()\n)) : \n  (() => {\n    const gross = currentRow.basicsalary + (currentRow.otherbenefits || 0);\n    const nssf = gross * 0.10;\n    const taxable = gross - nssf;\n\n    let paye = 0;\n    if (taxable <= 270000) {\n      paye = 0;\n    } else if (taxable <= 520000) {\n      paye = (taxable - 270000) * 0.08;\n    } else if (taxable <= 760000) {\n      paye = 20000 + (taxable - 520000) * 0.20;\n    } else if (taxable <= 1000000) {\n      paye = 68000 + (taxable - 760000) * 0.25;\n    } else {\n      paye = 128000 + (taxable - 1000000) * 0.30;\n    }\n\n    const totalDeductions =\n      nssf +\n      paye +\n      (currentRow.salaryadvance || 0) +\n      (currentRow.loandeduction || 0) +\n      (currentRow.helsb || 0) +\n      (currentRow.advancerecovery || 0) +\n      (currentRow.otherdeductions || 0) +\n      (currentRow.socialdeduction || 0);\n\n    return totalDeductions.toLocaleString();\n  })()\n })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "LEFT",
      "id": "customColumn4",
      "index": 10,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": true,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "TotalDeductions",
      "labelColor": "#FFFFFF",
      "notation": "standard",
      "originalId": "customColumn4",
      "sticky": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "TOP",
      "width": 150
    },
    "customColumn5": {
      "alias": "NEYPAY",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "buttonStyle": "rgb(3, 179, 101)",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = inputMonthlyPaytbl_Upload.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (\n  (() => {\n    const gross = currentRow.basicsalary + (currentRow.otherbenefits || 0);\n    const nssf = gross * 0.10;\n    const taxable = gross - nssf;\n\n    let paye = 0;\n    if (taxable <= 270000) {\n      paye = 0;\n    } else if (taxable <= 520000) {\n      paye = (taxable - 270000) * 0.08;\n    } else if (taxable <= 760000) {\n      paye = 20000 + (taxable - 520000) * 0.20;\n    } else if (taxable <= 1000000) {\n      paye = 68000 + (taxable - 760000) * 0.25;\n    } else {\n      paye = 128000 + (taxable - 1000000) * 0.30;\n    }\n\n    const totalDeductions =\n      nssf +\n      paye +\n      (currentRow.salaryadvance || 0) +\n      (currentRow.loandeduction || 0) +\n      (currentRow.helsb || 0) +\n      (currentRow.advancerecovery || 0) +\n      (currentRow.otherdeductions || 0) +\n      (currentRow.socialdeduction || 0);\n\n    const netPay = gross - totalDeductions;\n    return netPay.toLocaleString();\n  })()\n)) : \n  (() => {\n    const gross = currentRow.basicsalary + (currentRow.otherbenefits || 0);\n    const nssf = gross * 0.10;\n    const taxable = gross - nssf;\n\n    let paye = 0;\n    if (taxable <= 270000) {\n      paye = 0;\n    } else if (taxable <= 520000) {\n      paye = (taxable - 270000) * 0.08;\n    } else if (taxable <= 760000) {\n      paye = 20000 + (taxable - 520000) * 0.20;\n    } else if (taxable <= 1000000) {\n      paye = 68000 + (taxable - 760000) * 0.25;\n    } else {\n      paye = 128000 + (taxable - 1000000) * 0.30;\n    }\n\n    const totalDeductions =\n      nssf +\n      paye +\n      (currentRow.salaryadvance || 0) +\n      (currentRow.loandeduction || 0) +\n      (currentRow.helsb || 0) +\n      (currentRow.advancerecovery || 0) +\n      (currentRow.otherdeductions || 0) +\n      (currentRow.socialdeduction || 0);\n\n    const netPay = gross - totalDeductions;\n    return netPay.toLocaleString();\n  })()\n })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "LEFT",
      "id": "customColumn5",
      "index": 10,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": true,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "NEYPAY",
      "labelColor": "#FFFFFF",
      "notation": "standard",
      "originalId": "customColumn5",
      "sticky": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "TOP",
      "width": 150
    },
    "grosssalary": {
      "alias": "grosssalary",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "number",
      "computedValue": "{{(() => { const tableData = inputMonthlyPaytbl_Upload.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"grosssalary\"])) : grosssalary })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "LEFT",
      "id": "grosssalary",
      "index": 12,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "grosssalary",
      "notation": "standard",
      "originalId": "grosssalary",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "TOP",
      "width": 150
    },
    "helsb": {
      "alias": "helsb",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "columnType": "number",
      "computedValue": "{{(() => { const tableData = inputMonthlyPaytbl_Upload.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( \n  (() => {\n    return Number(currentRow.helsb || 0).toLocaleString('en-US');\n  })()\n)) :  \n  (() => {\n    return Number(currentRow.helsb || 0).toLocaleString('en-US');\n  })()\n })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "LEFT",
      "id": "helsb",
      "index": 8,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "helsb",
      "notation": "standard",
      "originalId": "helsb",
      "sticky": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "TOP",
      "width": 150
    },
    "loandeduction": {
      "alias": "loandeduction",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "columnType": "number",
      "computedValue": "{{(() => { const tableData = inputMonthlyPaytbl_Upload.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( \n  (() => {\n    return Number(currentRow.loandeduction || 0).toLocaleString('en-US');\n  })()\n)) :  \n  (() => {\n    return Number(currentRow.loandeduction || 0).toLocaleString('en-US');\n  })()\n })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "LEFT",
      "id": "loandeduction",
      "index": 6,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "loandeduction",
      "notation": "standard",
      "originalId": "loandeduction",
      "sticky": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "TOP",
      "width": 150
    },
    "netpay": {
      "alias": "netpay",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "number",
      "computedValue": "{{(() => { const tableData = inputMonthlyPaytbl_Upload.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"netpay\"])) : netpay })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "LEFT",
      "id": "netpay",
      "index": 16,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "netpay",
      "notation": "standard",
      "originalId": "netpay",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "TOP",
      "width": 150
    },
    "nssf": {
      "alias": "nssf",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "number",
      "computedValue": "{{(() => { const tableData = inputMonthlyPaytbl_Upload.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"nssf\"])) : nssf })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "LEFT",
      "id": "nssf",
      "index": 13,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "nssf",
      "notation": "standard",
      "originalId": "nssf",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "TOP",
      "width": 150
    },
    "otherbenefits": {
      "alias": "otherbenefits",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "columnType": "number",
      "computedValue": "{{(() => { const tableData = inputMonthlyPaytbl_Upload.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( \n  (() => {\n    return Number(currentRow.otherbenefits || 0).toLocaleString('en-US');\n  })()\n)) :  \n  (() => {\n    return Number(currentRow.otherbenefits || 0).toLocaleString('en-US');\n  })()\n })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "LEFT",
      "id": "otherbenefits",
      "index": 4,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "otherbenefits",
      "notation": "standard",
      "originalId": "otherbenefits",
      "sticky": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "TOP",
      "width": 150
    },
    "otherdeductions": {
      "alias": "otherdeductions",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "columnType": "number",
      "computedValue": "{{(() => { const tableData = inputMonthlyPaytbl_Upload.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( \n  (() => {\n    return Number(currentRow.otherdeductions || 0).toLocaleString('en-US');\n  })()\n)) :  \n  (() => {\n    return Number(currentRow.otherdeductions || 0).toLocaleString('en-US');\n  })()\n })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "LEFT",
      "id": "otherdeductions",
      "index": 10,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "otherdeductions",
      "notation": "standard",
      "originalId": "otherdeductions",
      "sticky": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "TOP",
      "width": 150
    },
    "paye": {
      "alias": "paye",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "number",
      "computedValue": "{{(() => { const tableData = inputMonthlyPaytbl_Upload.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"paye\"])) : paye })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "LEFT",
      "id": "paye",
      "index": 14,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "paye",
      "notation": "standard",
      "originalId": "paye",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "TOP",
      "width": 150
    },
    "salaryadvance": {
      "alias": "salaryadvance",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "columnType": "number",
      "computedValue": "{{(() => { const tableData = inputMonthlyPaytbl_Upload.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( \n  (() => {\n    return Number(currentRow.salaryadvance || 0).toLocaleString('en-US');\n  })()\n)) :  \n  (() => {\n    return Number(currentRow.salaryadvance || 0).toLocaleString('en-US');\n  })()\n })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "LEFT",
      "id": "salaryadvance",
      "index": 5,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "salaryadvance",
      "notation": "standard",
      "originalId": "salaryadvance",
      "sticky": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "TOP",
      "width": 150
    },
    "socialdeduction": {
      "alias": "socialdeduction",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "columnType": "number",
      "computedValue": "{{(() => { const tableData = inputMonthlyPaytbl_Upload.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( \n  (() => {\n    return Number(currentRow.socialdeduction || 0).toLocaleString('en-US');\n  })()\n)) :  \n  (() => {\n    return Number(currentRow.socialdeduction || 0).toLocaleString('en-US');\n  })()\n })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "LEFT",
      "id": "socialdeduction",
      "index": 7,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "socialdeduction",
      "notation": "standard",
      "originalId": "socialdeduction",
      "sticky": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "TOP",
      "width": 150
    },
    "staffdName": {
      "alias": "staffdName",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = inputMonthlyPaytbl_Upload.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"staffdName\"])) : staffdName })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "LEFT",
      "id": "staffdName",
      "index": 2,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "staffdName",
      "notation": "standard",
      "originalId": "staffdName",
      "sticky": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "TOP",
      "width": 150
    },
    "staffid": {
      "alias": "staffid",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = inputMonthlyPaytbl_Upload.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"staffid\"])) : staffid })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "LEFT",
      "id": "staffid",
      "index": 1,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "staffid",
      "notation": "standard",
      "originalId": "staffid",
      "selectOptions": "{{(() => { const tableData = inputMonthlyPaytbl_Upload.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (getStaffList.data.map(row => ({\n  label: row.staffname,\n  value: row.staffid\n})))) : getStaffList.data.map(row => ({\n  label: row.staffname,\n  value: row.staffid\n})) })()}}",
      "sticky": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "TOP",
      "width": 150
    },
    "totaldeductions": {
      "alias": "totaldeductions",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "number",
      "computedValue": "{{(() => { const tableData = inputMonthlyPaytbl_Upload.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"totaldeductions\"])) : totaldeductions })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "LEFT",
      "id": "totaldeductions",
      "index": 15,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "totaldeductions",
      "notation": "standard",
      "originalId": "totaldeductions",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "TOP",
      "width": 150
    },
    "transid": {
      "alias": "transid",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "columnType": "number",
      "computedValue": "{{(() => { const tableData = inputMonthlyPaytbl_Upload.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"transid\"])) : transid })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "LEFT",
      "id": "transid",
      "index": 0,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "transid",
      "notation": "standard",
      "originalId": "transid",
      "sticky": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "TOP",
      "width": 150
    }
  },
  "renderMode": "CANVAS",
  "responsiveBehavior": "fill",
  "rightColumn": 63,
  "searchKey": "",
  "serverSidePaginationEnabled": true,
  "showInlineEditingOptionDropdown": true,
  "tableData": "\n{{ \n  Select_public_monthlypayraw1.data.filter(row => \n    moment(row.DateMonth).isSame(moment(filterDatePicker.selectedDate), 'day')\n  ) \n}}\n",
  "textSize": "0.875rem",
  "topRow": 40,
  "totalRecordsCount": "{{Total_record_public_monthlypayraw1.data[0].count}}",
  "type": "TABLE_WIDGET_V2",
  "version": 2,
  "verticalAlignment": "TOP",
  "widgetId": "qw2jj30sz3",
  "widgetName": "inputMonthlyPaytbl_Upload"
}